{"version":3,"sources":["components/Home.js","components/Link.js","components/Posts.js","components/Post.js","components/Demo.js","components/NavItem.js","components/Navigation.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","React","Component","Link","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","url","tags","Posts","_this","state","items","_this2","fetch","then","res","json","data","setState","listview","map","item","key","id","components_Link","title","body","Post","heading","content","handleChange","bind","assertThisInitialized","save","e","defineProperty","target","name","value","preventDefault","method","headers","content-type","JSON","stringify","console","log","onSubmit","type","onChange","Demo","components_Post","components_Posts","NavItem","window","location","pathname","className","href","label","Navigation","NavItem_NavItem","Footer","App","Navigation_Navigation","react_router_dom_min","react_router","exact","path","component","Footer_Footer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2RAEqBA,0LAEjB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,iMAL0BC,IAAMC,YCezBC,cAdX,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACVH,0EAIN,OACIN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKO,KAAKH,MAAMO,KAChBb,EAAAC,EAAAC,cAAA,SAAIO,KAAKH,MAAMQ,cATZV,aC6BJW,cA3BX,SAAAA,EAAYT,GAAO,IAAAU,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAM,IACfC,EAAAT,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAQ,GAAAH,KAAAH,KAAMH,KACDW,MAAQ,CACTC,MAAO,IAHIF,oFAME,IAAAG,EAAAV,KACjBW,MAAM,8CACLC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIL,EAAKM,SAAS,CAACP,MAAOM,uCAGpC,IAAME,EAAWjB,KAAKQ,MAAMC,MAAMS,IAAI,SAAAC,GAAI,OACtC5B,EAAAC,EAAAC,cAAA,OAAK2B,IAAKD,EAAKE,IACf9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAMlB,IAAKe,EAAKI,MAAOlB,KAAMc,EAAKK,OAClCjC,EAAAC,EAAAC,cAAA,cAGJ,OACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kBACCwB,UAtBGtB,6BCyDL8B,cAzDX,SAAAA,EAAY5B,GAAO,IAAAU,EAAA,OAAAT,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,IACflB,EAAAT,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2B,GAAAtB,KAAAH,KAAMH,KACDW,MAAQ,CACTkB,QAAS,GACTC,QAAS,IAGbpB,EAAKqB,aAAerB,EAAKqB,aAAaC,KAAlB/B,OAAAgC,EAAA,EAAAhC,CAAAS,IACpBA,EAAKwB,KAAOxB,EAAKwB,KAAKF,KAAV/B,OAAAgC,EAAA,EAAAhC,CAAAS,IARGA,4EAWNyB,GACThC,KAAKgB,SAALlB,OAAAmC,EAAA,EAAAnC,CAAA,GACKkC,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,qCAI7BJ,GAEDA,EAAEK,iBAEF1B,MAAM,6CAA8C,CAChD2B,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBhB,KAAMiB,KAAKC,UAAU,CACjBhB,QAAS1B,KAAKQ,MAAMkB,QACpBC,QAAS3B,KAAKQ,MAAMmB,YAG3Bf,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAI4B,QAAQC,IAAI7B,sCAK1B,OACIxB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,QAAMoD,SAAU7C,KAAK+B,MACjBxC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBADJ,IAC2BF,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAAA,SAAOqD,KAAK,OAAOX,KAAK,UAAUY,SAAU/C,KAAK4B,aAAcQ,MAAOpC,KAAKQ,MAAMkB,WAErFnC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBADJ,IAC2BF,EAAAC,EAAAC,cAAA,WACvBF,EAAAC,EAAAC,cAAA,YAAU0C,KAAK,UAAUY,SAAU/C,KAAK4B,aAAcQ,MAAOpC,KAAKQ,MAAMmB,WAE5EpC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQqD,KAAK,UAAb,gBAnDDnD,aCEEqD,mLAEjB,OACIzD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwD,EAAD,MACA1D,EAAAC,EAAAC,cAACyD,EAAD,cALsBxD,IAAMC,mBCDnBwD,0LAEb,OACI5D,EAAAC,EAAAC,cAAA,UACK2D,OAAOC,SAASC,WAAatD,KAAKH,MAAMyD,UAAY/D,EAAAC,EAAAC,cAAA,KAAG8D,UAAU,WAAWC,KAAM,IAAMxD,KAAKH,MAAMyD,UAAWtD,KAAKH,MAAM4D,OACzHL,OAAOC,SAASC,WAAatD,KAAKH,MAAMyD,UAAY/D,EAAAC,EAAAC,cAAA,KAAG+D,KAAM,IAAMxD,KAAKH,MAAMyD,UAAWtD,KAAKH,MAAM4D,eALhF9D,cCChB+D,mLAEb,OACInE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,UACXhE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,QAAf,QACAhE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,WACXhE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACkE,EAAD,CAASL,SAAS,OAAOG,MAAM,SAC/BlE,EAAAC,EAAAC,cAACkE,EAAD,CAASL,SAAS,OAAOG,MAAM,mBARf9D,aCFnBiE,mLAEb,OACIrE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,UAAf,kCAHwB5D,aC+BrBkE,mLApBX,OACEtE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,OACbhE,EAAAC,EAAAC,cAACqE,EAAD,MACAvE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,QACbhE,EAAAC,EAAAC,cAACsE,EAAA,WAAD,KACExE,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,WACXhE,EAAAC,EAAAC,cAACuE,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7E,IACjCC,EAAAC,EAAAC,cAACuE,EAAA,MAAD,CAAOE,KAAK,QAAQC,UAAW7E,IAC/BC,EAAAC,EAAAC,cAACuE,EAAA,MAAD,CAAOE,KAAK,SAASC,UAAW7D,IAChCf,EAAAC,EAAAC,cAACuE,EAAA,MAAD,CAAOE,KAAK,WAAWC,UAAW1C,IAClClC,EAAAC,EAAAC,cAACuE,EAAA,MAAD,CAAOE,KAAK,QAAQC,UAAWnB,OAIvCzD,EAAAC,EAAAC,cAAC2E,EAAD,cAhBUzE,aCCE0E,QACW,cAA7BjB,OAAOC,SAASiB,UAEe,UAA7BlB,OAAOC,SAASiB,UAEhBlB,OAAOC,SAASiB,SAASC,MACvB,2DCZNC,IAASC,OAAOlF,EAAAC,EAAAC,cAACiF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnE,KAAK,SAAAoE,GACjCA,EAAaC","file":"static/js/main.b666ae42.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>What is the scope and objective of this base template?</h3>\r\n        <p>\r\n          This boilerplate is mean t to be used as a bare minimum setup with the minimal necessary components. This is not built with any architecture / dir structure recommendations\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nclass Link extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.props.url}</h1>\r\n                <p>{this.props.tags}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Link;","import React, { Component } from 'react';\r\nimport Link from './Link';\r\n\r\nclass Posts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: []\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n        .then(res => res.json())\r\n        .then(data => this.setState({items: data}));\r\n    }\r\n    render() {\r\n        const listview = this.state.items.map(item => (\r\n            <div key={item.id}>\r\n            <Link url={item.title} tags={item.body} />\r\n            <br />\r\n            </div>\r\n        ))\r\n        return (\r\n            <div>\r\n                <h1>List</h1>\r\n                {listview}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Posts;","import React, { Component } from 'react';\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            heading: '',\r\n            content: ''\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.save = this.save.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    save(e) {\r\n\r\n        e.preventDefault();\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/posts', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                heading: this.state.heading,\r\n                content: this.state.content\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => console.log(data));\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Add Item</h1>\r\n                <form onSubmit={this.save}>\r\n                    <div>\r\n                        <label>Heading</label> <br />\r\n                        <input type=\"text\" name=\"heading\" onChange={this.handleChange} value={this.state.heading} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Content</label> <br />\r\n                        <textarea name=\"content\" onChange={this.handleChange} value={this.state.content} />\r\n                    </div>\r\n                    <br />\r\n                    <button type=\"submit\">Add</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from './Post';\r\nimport Posts from './Posts';\r\n\r\nexport default class Demo extends React.Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            <Post />\r\n            <Posts />\r\n        </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Navigation.css';\r\n\r\nexport default class NavItem extends Component {\r\n    render() {\r\n        return (\r\n            <li>\r\n                {window.location.pathname === this.props.pathname && <a className=\"selected\" href={'#' + this.props.pathname}>{this.props.label}</a>}\r\n                {window.location.pathname !== this.props.pathname && <a href={'#' + this.props.pathname}>{this.props.label}</a>}\r\n            </li>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Navigation.css';\r\nimport NavItem from './NavItem';\r\n\r\nexport default class Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar\">\r\n                <div className=\"logo\">IOAK</div>\r\n                <div className=\"navmenu\">\r\n                    <ul>\r\n                        <NavItem pathname=\"home\" label=\"Home\"/>\r\n                        <NavItem pathname=\"demo\" label=\"Demo\"/>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                Copyright 2019 ioak.org\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport Posts from './components/Posts';\r\nimport Post from './components/Post';\r\nimport Demo from './components/Demo';\r\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Navigation from './components/Navigation';\r\nimport Footer from './components/Footer';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navigation />\r\n        <div className=\"body\">\r\n          <HashRouter>\r\n            <div className=\"content\">\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/home\" component={Home} />\r\n                <Route path=\"/posts\" component={Posts} />\r\n                <Route path=\"/addpost\" component={Post} />\r\n                <Route path=\"/demo\" component={Demo} />\r\n            </div>\r\n          </HashRouter>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}